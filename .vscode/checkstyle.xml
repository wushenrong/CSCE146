<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <!-- Set defaults for checkstyle                    -->
    <!-- https://checkstyle.org/config.html#Checker     -->
    <!-- <property name="basedir" value="src" /> -->
    <property name="severity" value="error" />
    <property name="fileExtensions" value="java" />
    <property name="tabWidth" value="4" />

    <!-- Checks whether files end with a new line.                      -->
    <!-- See https://checkstyle.org/checks/misc/newlineatendoffile.html -->
    <module name="NewlineAtEndOfFile" />

    <!-- Checks for Size Violations.                        -->
    <!-- See https://checkstyle.org/checks/sizes/index.html -->
    <module name="FileLength" />
    <module name="LineLength">
        <property name="max" value="120" />
    </module>

    <!-- Checks for whitespace                                   -->
    <!-- See https://checkstyle.org/checks/whitespace/index.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true" />
    </module>

    <!-- Miscellaneous other checks.                       -->
    <!-- See https://checkstyle.org/checks/misc/index.html -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$" />
        <property name="minimum" value="0" />
        <property name="maximum" value="0" />
        <property name="message" value="Line has trailing spaces." />
    </module>

    <module name="TreeWalker">
        <!-- Checks for Naming Conventions.                      -->
        <!-- See https://checkstyle.org/checks/naming/index.html -->
        <module name="ConstantName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MemberName" />
        <module name="MethodName" />
        <module name="PackageName" />
        <module name="ParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName" />

        <!-- Checks for imports                                   -->
        <!-- See https://checkstyle.org/checks/imports/index.html -->
        <module name="AvoidStarImport" />
        <module name="IllegalImport" /> <!-- defaults to sun.* packages -->
        <module name="RedundantImport" />
        <module name="UnusedImports">
            <property name="processJavadoc" value="false" />
        </module>

        <!-- Checks for Size Violations.                        -->
        <!-- See https://checkstyle.org/checks/sizes/index.html -->
        <module name="MethodLength" />
        <module name="ParameterNumber" />

        <!-- Checks for whitespace                                   -->
        <!-- See https://checkstyle.org/checks/whitespace/index.html -->
        <module name="EmptyForIteratorPad" />
        <module name="GenericWhitespace" />
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="AT" />
            <property name="tokens" value="INC" />
            <property name="tokens" value="DEC" />
            <property name="tokens" value="UNARY_MINUS" />
            <property name="tokens" value="UNARY_PLUS" />
            <property name="tokens" value="BNOT" />
            <property name="tokens" value="LNOT" />
            <property name="tokens" value="DOT" />
            <property name="tokens" value="ARRAY_DECLARATOR" />
            <property name="tokens" value="INDEX_OP" />
        </module>
        <module name="NoWhitespaceBefore" />
        <module name="OperatorWrap" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround" />

        <!-- Modifier Checks                                       -->
        <!-- See https://checkstyle.org/checks/modifier/index.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- Checks for blocks. You know, those {}'s             -->
        <!-- See https://checkstyle.org/checks/blocks/index.html -->
        <module name="AvoidNestedBlocks" />
        <module name="EmptyBlock" />
        <module name="LeftCurly" />
        <module name="NeedBraces" />
        <module name="RightCurly" />

        <!-- Checks for common coding problems                   -->
        <!-- See https://checkstyle.org/checks/coding/index.html -->
        <module name="DefaultComesLast">
            <property name="skipIfLastAndSharedWithCase" value="true" />
        </module>
        <module name="EmptyStatement" />
        <module name="EqualsHashCode" />
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true" />
            <property name="ignoreSetter" value="true" />
        </module>
        <module name="IllegalInstantiation" />
        <module name="InnerAssignment" />
        <module name="MagicNumber">
            <property name="ignoreHashCodeMethod" value="true" />
        </module>
        <module name="MissingSwitchDefault" />
        <module name="MultipleVariableDeclarations" />
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />

        <!-- Checks for class design                             -->
        <!-- See https://checkstyle.org/checks/design/index.html -->
        <!-- <module name="DesignForExtension" /> -->
        <!-- <module name="FinalClass" /> -->
        <!-- <module name="HideUtilityClassConstructor" /> -->
        <module name="InterfaceIsType" />
        <module name="OneTopLevelClass" />
        <module name="VisibilityModifier">
            <property name="packageAllowed" value="true" />
        </module>

        <!-- Miscellaneous other checks                        -->
        <!-- See https://checkstyle.org/checks/misc/index.html -->
        <module name="ArrayTypeStyle" />
        <!-- <module name="FinalParameters" /> -->
        <module name="Indentation">
            <property name="caseIndent" value="0" />
        </module>
        <module name="OuterTypeFilename" />
        <!-- <module name="TodoComment" /> -->
        <module name="UpperEll" />

        <!-- Additional checks from sevntu -->
        <!-- https://sevntu-checkstyle.github.io/sevntu.checkstyle -->
        <module name="com.github.sevntu.checkstyle.checks.sizes.LineLengthExtendedCheck">
            <property name="max" value="120" />
            <property name="ignoreClass" value="true" />
            <property name="ignoreConstructor" value="true" />
            <property name="ignoreField" value="true" />
            <property name="ignoreMethod" value="true" />
            <property name="ignorePattern" value="^( *\* *[^ ]+)|((package|import) .*)$" />
        </module>

        <!-- Checks for Naming Conventions for Enums and Interfact Types. -->
        <module name="com.github.sevntu.checkstyle.checks.naming.EnumValueNameCheck" />
        <module name="com.github.sevntu.checkstyle.checks.naming.InterfaceTypeParameterNameCheck" />
        <module name="com.github.sevntu.checkstyle.checks.naming.UniformEnumConstantNameCheck" />

        <!-- Checks for cleaner design -->
        <module name="com.github.sevntu.checkstyle.checks.design.AvoidConditionInversionCheck" />
        <module name="com.github.sevntu.checkstyle.checks.design.ChildBlockLengthCheck">
            <property name="blockTypes" value="LITERAL_IF" />
            <property name="blockTypes" value="LITERAL_ELSE" />
            <property name="blockTypes" value="LITERAL_WHILE" />
            <property name="blockTypes" value="LITERAL_DO" />
            <property name="blockTypes" value="LITERAL_FOR" />
            <property name="blockTypes" value="LITERAL_SWITCH" />
            <property name="blockTypes" value="LITERAL_TRY" />
            <property name="blockTypes" value="LITERAL_CATCH" />
        </module>
        <module name="com.github.sevntu.checkstyle.checks.design.NestedSwitchCheck" />
        <module name="com.github.sevntu.checkstyle.checks.design.PublicReferenceToPrivateTypeCheck" />
        <module name="com.github.sevntu.checkstyle.checks.design.InnerClassCheck" />

        <!-- Checks for better and modern coding style -->
        <module
            name="com.github.sevntu.checkstyle.checks.coding.AvoidConstantAsFirstOperandInConditionCheck" />
        <module
            name="com.github.sevntu.checkstyle.checks.coding.AvoidNotShortCircuitOperatorsForBooleanCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.ConfusingConditionCheck" />
        <module
            name="com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.EitherLogOrThrowCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.EmptyPublicCtorInClassCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.ForbidCCommentsInMethodsCheck" />
        <module
            name="com.github.sevntu.checkstyle.checks.coding.LogicConditionNeedOptimizationCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.MoveVariableInsideIfCheck" />
        <module
            name="com.github.sevntu.checkstyle.checks.coding.MultipleVariableDeclarationsExtendedCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.NumericLiteralNeedsUnderscoreCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.RedundantReturnCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.ReturnBooleanFromTernaryCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.ReturnNullInsteadOfBooleanCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.SimpleAccessorNameNotationCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.SingleBreakOrContinueCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.TernaryPerExpressionCountCheck" />
        <module
            name="com.github.sevntu.checkstyle.checks.coding.UnnecessaryParenthesesExtendedCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.UselessSingleCatchCheck" />
        <module name="com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck" />
    </module>
</module>
